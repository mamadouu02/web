stages: # Groups jobs into stages. All jobs in one stage must complete before next stage is executed.
  - lint
  - test
  - deploy

lint-js:
  stage: lint
  tags: # Used to select runners from the list of available runners.
    - docker
  image: node # Full name of the image that should be used.
  script:
    - npm install eslint
    - npx eslint Exercice-50.js > js_report.txt
  artifacts:
    when: always
    paths:
      - js_report.txt

jobcypress:
  stage: test
  tags:
    - docker  # Comme on utilise une image pour isoler on doit utiliser un runner docker 
  image: cypress/base:16.18.1 # Image fournie par cypress avec ce qu'il faut
  script:
    - npm i # Installe ce qui est dÃ©crit dans package.json
    - ./node_modules/.bin/serve & # Lance le serveur
    - npx cypress run > test_report.txt # Lance les tests
    - kill -9 $(ps | grep node | awk '{print $1}') # Cette ligne pourrait permettre de tuer serve
  artifacts:
    when: always
    paths:
      - test_report.txt

pages: # A special job used to upload static sites to Gitlab pages. Requires a public directory.
  stage: deploy
  script: # Shell scripts executed by the Runner.
    - mkdir -p public # Creation of a public directory.
    - cp Exercice* public/
    - mv public/Exercice-50.html public/index.html
  artifacts: # Used to specify a list of files and directories that should be attached to the job if it succeeds.
    paths: # A list of paths to files/folders that should be included in the artifact.
      - public

badges:
  stage: deploy
  tags:
    - docker
  image: node
  script:
    - ./genereBadges.sh
  dependencies: # Specify a list of job names from earlier stages from which artifacts should be loaded.
    - lint-js
    - jobcypress
  artifacts:
    paths:
      - badge_lint.svg
      - badge_test.svg
  when: always
